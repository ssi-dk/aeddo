[{"path":"https://ssi-dk.github.io/aeddo/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Statens Serum Institut Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ssi-dk.github.io/aeddo/articles/aeddo.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Automated and Early Detection of Disease Outbreaks","text":"novel algorithm utilizes hierarchical generalized linear model modeling framework model count observations \\(y\\) assess unobserved random effects \\(u\\). random effects used directly detection algorithm characterize outbreak.","code":""},{"path":"https://ssi-dk.github.io/aeddo/articles/aeddo.html","id":"applying-the-algorithm","dir":"Articles","previous_headings":"Introduction","what":"Applying the algorithm","title":"Automated and Early Detection of Disease Outbreaks","text":"install ‘aeddo’, can use following command obtain development version GitHub: CRAN: Now, library loaded, expose functions: vignette, ‘aeddo’ algorithm applied Monthly Deaths Lung Diseases UK (source: P. J. Diggle (1990) Time Series: Biostatistical Introduction. Oxford, table .3). data set accessible trough ‘MASS’ R package get idea monthly data looks like, visualized following figure  Clearly, annual seasonal component seen data. Thus, fixed-effects model incorporating seasonality using Fourier terms hypothesized: time preprocess data. First, ‘ts’ object broken time stamp observations. achieved partly ‘zoo’ R package: , needed compute month within year, \\(m\\), needed Fourier terms: Now, bundled together data.frame: information available population sizes given time stamps, \\(n\\) fixed 1. purpose example, assumed rolling window size 24 months appropriate parameter estimation. Moreover, disease threshold, \\(U_{t_0}\\) based 90% quantile second-stage random effects distribution: ‘aeddo’ algorithm applied data:","code":"install.packages(\"devtools\") devtools::install_github(\"ssi-dk/aeddo\") install.packages(\"aeddo\") library(aeddo) library(ggplot2) #>  #> Attaching package: 'ggplot2' #> The following object is masked from 'package:aeddo': #>  #>     autoplot deaths <- MASS::deaths plot(deaths) formula <- y ~ 1 + sin(2 * pi * m / 12) + cos(2 * pi * m / 12) # Extract timestamp timestamp <- zoo::as.yearmon(   stats::time(deaths) ) # ... and observations observations <- c(deaths) m <- as.integer(   format(timestamp, \"%m\") ) # Bundle up in data.frame processed_deaths <- data.frame(   time = timestamp,   y = observations,   n = 1,   m = m ) k <- 24 sig_level <- 0.9 aeddo_results <- aeddo(   data = processed_deaths,   formula = formula,   k = k,   sig_level = sig_level,   exclude_past_outbreaks = TRUE,   init_theta = c(1, 0, 0, 1),   lower = c(1e-6, -6, -6, 1e-6),   upper = c(1e2, 6, 6, 3),   method = \"L-BFGS-B\" )"},{"path":"https://ssi-dk.github.io/aeddo/articles/aeddo.html","id":"the-aeddo-package-implements-s3-methods","dir":"Articles","previous_headings":"Introduction","what":"The aeddo package implements S3 methods","title":"Automated and Early Detection of Disease Outbreaks","text":"Among things, ‘aeddo’ R package incorporates S3 methods, allow easy visualization outcome algorithm. includes autoplot() function, also wrapper autoplot function, plot(). One can use either:  visualize results. , circles inside grey area represent training observations, dim circles training period represents observations within expected range, full opacity circles training period represents outbreak-related observations. Hence, found 6 outbreak-related observations data set.","code":"autoplot(aeddo_results) plot(aeddo_results)"},{"path":"https://ssi-dk.github.io/aeddo/articles/aeddo.html","id":"formulation-of-the-hiearchical-generalzied-linear-model","dir":"Articles","previous_headings":"Introduction","what":"Formulation of the hiearchical generalzied linear model","title":"Automated and Early Detection of Disease Outbreaks","text":"hierarchical generalized linear model used novel outbreak detection algorithm formulated hierarchical Poisson Gamma model. section present derivation marginal distribution \\(Y\\) along joint likelihood function first second stage models. reference hierarchical models, see Henrik Madsen Poul Thyregod (2011), ISBN: 9781420091557. compound Poisson Gamma model conditional distribution count observations assumed Poisson distribution intensities \\(\\lambda\\) \\[\\begin{equation}   f_{Y|u}(y;u,\\beta)=\\frac{(\\lambda u)^{y}}{y!}\\exp(-\\lambda u) \\end{equation}\\] probability density function random effects \\(u\\) assumed follow reparametrized Gamma distribution mean \\(1\\), \\(u \\sim \\mathrm{G}(1/\\phi,\\phi)\\) \\[\\begin{equation}   f_{u}(u;\\phi)=\\frac{1}{\\phi \\Gamma(1/\\phi)} \\bigg(\\frac{u}{\\phi}\\bigg)^{1/\\phi-1} \\exp (-u/\\phi) \\end{equation}\\] Subsequently, model can formulated two-level hierarchical model  probability function marginal distribution \\(Y\\) determined \\[\\begin{equation}   \\begin{aligned}     g_{Y}(y;\\beta,\\phi)&=\\int_{u=0}^\\infty f_{Y|u}(y;u,\\beta) f_{u}(u;\\phi) \\,du \\\\     &=\\int_{u=0}^\\infty \\frac{(\\lambda u)^y}{y!} \\exp (-\\lambda u) \\frac{1}{\\phi \\Gamma(1/\\phi)} \\bigg(\\frac{u}{\\phi}\\bigg)^{1/\\phi-1} \\exp (-u /\\phi) \\,du\\\\     &=\\frac{\\lambda^{y}}{y!\\Gamma(1/\\phi)\\phi^{1/\\phi}} \\int_{u=0}^\\infty u^{y+1/\\phi-1} \\exp \\big(-u(\\lambda \\phi+1)/\\phi\\big) \\,du   \\end{aligned} \\end{equation}\\] noted integrand kernel probability density function Gamma distribution, \\(\\mathrm{G}\\big(y+1/\\phi,\\phi/(\\lambda \\phi+1)\\big)\\). integral density shall equal one, found adjusting norming constant \\[\\begin{equation}   \\int_{u=0}^\\infty  u^{ y+ 1/\\phi-1} \\exp \\Big(- u/\\big(\\phi/( \\lambda \\phi+1)\\big)\\Big) \\,du = \\frac{\\phi^{ y+ 1/\\phi}\\Gamma( y+ 1/\\phi)}{( \\lambda \\phi + 1)^{y+1/\\phi}} \\end{equation}\\] Therefore, shown marginal distribution \\(Y\\) Negative Binomial distribution, \\(Y\\sim\\mathrm{NB}\\big(1/\\phi,1/(\\lambda\\phi+1)\\big)\\). probability function \\(Y\\) \\[\\begin{equation}   \\begin{aligned}     P[Y=y]&=g_{Y}(y; \\beta, \\phi) \\\\     &=\\frac{\\lambda^{y}}{y!\\Gamma(1/\\phi)\\phi^{1/\\phi}}\\frac{\\phi^{y+1/\\phi}\\Gamma(y+1/\\phi)}{(\\lambda \\phi + 1)^{y+1/\\phi}} \\\\     &=\\frac{\\Gamma(y+1/\\phi)}{\\Gamma(1/\\phi)y!}\\frac{1}{(\\lambda\\phi+1)^{1/\\phi}}\\bigg(\\frac{\\lambda\\phi}{\\lambda\\phi+1}\\bigg)^{y} \\\\     &=\\begin{pmatrix} y+1/\\phi-1 \\\\ y \\end{pmatrix} \\frac{1}{(\\lambda\\phi+1)^{1/\\phi}}\\bigg(\\frac{\\lambda\\phi}{\\lambda\\phi+1}\\bigg)^{y} \\ , \\quad \\mathrm{} \\ y = 0, 1, 2, \\dots   \\end{aligned} \\end{equation}\\] following convention used \\[\\begin{equation}   \\begin{pmatrix} z\\\\y \\end{pmatrix} = \\frac{\\Gamma(z+1)}{\\Gamma(z+1-y)y!} \\end{equation}\\] \\(z\\) real \\(y\\) integer values. Consequently, mean variance \\(Y\\) given \\[\\begin{equation}   \\mathrm{E}[Y] = \\lambda \\qquad \\mathrm{V}[Y] = \\lambda (\\lambda \\phi + 1) \\end{equation}\\] joint likelihood function estimating \\((\\beta,\\phi)\\) \\[\\begin{equation}   L( \\beta, \\phi; y_{})=\\prod_{t=1}^{T}\\prod_{=1}^{m} \\begin{pmatrix} y_{}+1/\\phi-1 \\\\ y_{} \\end{pmatrix} \\frac{1}{(\\lambda_{}\\phi+1)^{1/\\phi}}\\bigg(\\frac{\\lambda_{}\\phi}{\\lambda_{}\\phi+1}\\bigg)^{y_{}} \\end{equation}\\]","code":""},{"path":"https://ssi-dk.github.io/aeddo/articles/aeddo.html","id":"inference-on-individual-groups","dir":"Articles","previous_headings":"Introduction","what":"Inference on individual groups","title":"Automated and Early Detection of Disease Outbreaks","text":"Consider compound Poisson Gamma model, assume value \\(Y=y\\) observed. conditional distribution \\(u\\) given \\(Y=y\\) found using Bayes Theorem. order simplify notation, subscript indicating group time omitted. \\[\\begin{equation}   \\begin{aligned}     g_{u}(u|Y=y)&=\\frac{f_{y,u}(y,u)}{g_Y(y;\\lambda, \\phi)} \\\\     &=\\frac{f_{y|u}(y;u)g_{u}(u)}{g_{Y}(y;\\lambda,\\phi)} \\\\     &=\\frac{1}{g_{Y}(y;\\lambda,\\phi)}\\Bigg(\\frac{(\\lambda u)^y}{y!} \\exp (-\\lambda u) \\frac{1}{\\phi \\Gamma(1/\\phi)} \\bigg(\\frac{u}{\\phi}\\bigg)^{1/\\phi-1} \\exp (-u/\\phi)\\Bigg) \\\\     &\\propto u^{y+1/\\phi-1} \\exp \\big(- u(\\lambda\\phi+1)/\\phi\\big)   \\end{aligned} \\end{equation}\\] , probability density function identified \\[\\begin{equation}   u^{y+1/\\phi-1} \\exp (- u(\\lambda\\phi+1)/\\phi) \\end{equation}\\] kernel Gamma distribution, \\(\\mathrm{G}(y+1/\\phi,\\phi/(\\lambda\\phi+1))\\), .e. conditional distribution \\(u\\) given \\(Y=y\\) can written \\[\\begin{equation}   u| Y=y\\sim \\mathrm{G}\\big(y+1/\\phi,\\phi/(\\lambda \\phi+1)\\big) \\end{equation}\\] mean conditional distribution given : \\[\\begin{equation}   \\mathrm{E}[u|Y=y]=\\frac{y\\phi+1}{\\lambda \\phi+1} \\end{equation}\\] variance conditional distribution : \\[\\begin{equation}   \\mathrm{V}[u|Y=y]=\\frac{( \\phi^2+\\phi)}{(\\lambda \\phi + 1)^2} \\end{equation}\\] formulas provide mean variance conditional distribution \\(u\\) given observed value \\(Y=y\\).","code":""},{"path":"https://ssi-dk.github.io/aeddo/articles/aeddo.html","id":"the-rationale-for-employing-the-gamma-distribution-as-a-second-stage-model","dir":"Articles","previous_headings":"Introduction","what":"The rationale for employing the Gamma distribution as a second stage model","title":"Automated and Early Detection of Disease Outbreaks","text":"choice Gamma distribution modeling random effects motivated several reasons. Firstly, support Gamma distribution, ranges 0 infinity, aligns mean-value space, denoted \\(\\mathcal{M}\\), Poisson distribution. ensures random effects constrained within meaningful range underlying Poisson process. Secondly, two-parameter family Gamma distributions offers considerable flexibility, encompassing wide range shapes distributions can span exponential-like distributions fairly symmetrical distributions positive real line. flexibility allows model capture various patterns characteristics observed data. Additionally, choice Gamma distribution benefits terms derivation marginal distribution response variable \\(Y\\). kernel \\(u^{\\alpha-1}\\exp(-u/\\beta)\\) Gamma distribution used modeling random effects exhibits similar structure kernel \\(u^y\\exp(-u)\\) likelihood function corresponding sampling distribution \\(Y\\). similarity facilitates analytical computation integral involved deriving marginal distribution, can expressed terms known functions. Overall, Gamma distribution selected due alignment mean-value space Poisson distribution, flexibility capturing diverse distributions, analytical convenience computing marginal distribution response variable.","code":""},{"path":"https://ssi-dk.github.io/aeddo/articles/aeddo.html","id":"the-three-steps-of-the-algorithm","dir":"Articles","previous_headings":"Introduction","what":"The three steps of the algorithm","title":"Automated and Early Detection of Disease Outbreaks","text":"first step involves fitting either Poisson Gamma model log link reference data. , possible include arbitrary number covariates supplying model formula. order account structural changes time series, e.g. improved sensitive diagnostic method new screening strategy hospitals, rolling window width \\(k\\) used estimate time-varying model parameters. Also, assumed count proportional population size \\(n\\). Hence terms canonical link model fixed effects \\[\\begin{equation}   \\log(\\lambda_{}) = x_{}\\beta + \\log(n_{}), \\quad =1,\\dots,m, \\quad t=1,\\dots,T \\end{equation}\\] \\(x_{}\\) \\(\\beta\\) \\(p\\)-dimensional vectors covariates fixed effects parameters respectively, \\(p\\) denotes number covariates fixed effects parameters, \\(m\\) denotes number groups, \\(T\\) denotes length period. second step algorithm, new observation becomes available, algorithm infers one-step ahead random effect \\(u_{it_1}\\) group using obtained model estimates \\(\\theta_{t_0}\\). , \\(t_0\\) represents current time point, \\(t_1\\) represent one-step ahead time points. threshold \\(U_{t_0}\\) detecting outbreak signals defined quantile distribution random effects second stage model. threshold calculated based Gamma distribution using plug-estimate \\(\\hat{\\phi}_{t_0}\\). final step, inferred random effect \\(\\hat{u}_{it_1}\\) compared upper bound \\(U_{t_0}\\), alarm raised \\(\\hat{u}_{it_1}>U_{t_0}\\). outbreak detected, related observation \\(y_{it_1}\\) omitted parameter estimation future. Thus, resulting smaller sample size rolling window specific observation discarded.","code":""},{"path":"https://ssi-dk.github.io/aeddo/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kasper Schou Telkamp. Author. Lasse Engbo Christiansen. Author, maintainer. . Copyright holder, funder.","code":""},{"path":"https://ssi-dk.github.io/aeddo/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schou Telkamp K, Christiansen L (2023). aeddo: Automated Early Detection Disease Outbreaks. R package version 0.1.1, https://github.com/ssi-dk/aeddo, https://ssi-dk.github.io/aeddo/.","code":"@Manual{,   title = {aeddo: Automated and Early Detection of Disease Outbreaks},   author = {Kasper {Schou Telkamp} and Lasse Engbo Christiansen},   year = {2023},   note = {R package version 0.1.1, https://github.com/ssi-dk/aeddo},   url = {https://ssi-dk.github.io/aeddo/}, }"},{"path":[]},{"path":"https://ssi-dk.github.io/aeddo/index.html","id":"aeddo-automated-and-early-detection-of-disease-outbreaks","dir":"","previous_headings":"","what":"aeddo: Automated and Early Detection of Disease Outbreaks","title":"Automated and Early Detection of Disease Outbreaks","text":"aeddo R package provides cutting-edge solution automated early detection disease outbreaks time series data. innovative tool leverages hierarchical models novel way infer one-step ahead random effects, subsequently used identify characterize disease outbreaks.","code":""},{"path":"https://ssi-dk.github.io/aeddo/index.html","id":"why-aeddo","dir":"","previous_headings":"","what":"Why aeddo?","title":"Automated and Early Detection of Disease Outbreaks","text":"Epidemiologists, public health professionals, researchers often challenged need detect disease outbreaks promptly. Timely identification critical implementing appropriate control measures mitigating impact outbreaks. aeddo designed address challenge offer range benefits: Innovative Approach: aeddo employs hierarchical models estimate one-step ahead random effects, enabling early detection outbreaks disease data. approach game-changer epidemiological analysis. Effectively Controls False Alarms: aeddo’s applications broad relevant across field epidemiology. supports professionals researchers various domains, including public health, epidemiological research, data analysis, effectively controlling number false alarms. Real-time Insights: providing prospective detection capabilities, aeddo offers real-time insights disease outbreak patterns. invaluable making data-driven decisions implementing timely interventions.","code":""},{"path":"https://ssi-dk.github.io/aeddo/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Automated and Early Detection of Disease Outbreaks","text":"","code":"# Install aeddo from CRAN install.packages(\"aeddo\")"},{"path":"https://ssi-dk.github.io/aeddo/index.html","id":"development-version","dir":"","previous_headings":"Installation","what":"Development version","title":"Automated and Early Detection of Disease Outbreaks","text":"can install development version aeddo GitHub : Start leveraging aeddo today gain unique perspective disease outbreak detection time series data.","code":"# install.packages(\"devtools\") devtools::install_github(\"ssi-dk/aeddo\")"},{"path":"https://ssi-dk.github.io/aeddo/index.html","id":"get-started","dir":"","previous_headings":"","what":"Get Started","title":"Automated and Early Detection of Disease Outbreaks","text":"Explore package’s functions features referring documentation. Detailed examples use cases provided help make aeddo epidemiological work.","code":""},{"path":"https://ssi-dk.github.io/aeddo/index.html","id":"contributions","dir":"","previous_headings":"","what":"Contributions","title":"Automated and Early Detection of Disease Outbreaks","text":"Contributions aeddo welcomed. suggestions, feature requests, encounter issues, please don’t hesitate open issue submit pull request.","code":""},{"path":"https://ssi-dk.github.io/aeddo/reference/aeddo-package.html","id":null,"dir":"Reference","previous_headings":"","what":"aeddo: Automated and Early Detection of Disease Outbreaks — aeddo-package","title":"aeddo: Automated and Early Detection of Disease Outbreaks — aeddo-package","text":"powerful tool automating early detection disease outbreaks time series data. 'aeddo' employs advanced statistical methods, including hierarchical models, innovative manner effectively characterize outbreak signals. particularly useful epidemiologists, public health professionals, researchers seeking identify respond disease outbreaks timely fashion. detailed reference hierarchical models, consult Henrik Madsen Poul Thyregod's book (2011), ISBN: 9781420091557.","code":""},{"path":[]},{"path":"https://ssi-dk.github.io/aeddo/reference/aeddo-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"aeddo: Automated and Early Detection of Disease Outbreaks — aeddo-package","text":"Maintainer: Lasse Engbo Christiansen lsec@ssi.dk (ORCID) Authors: Kasper Schou Telkamp kasper.telkamp@gmail.com (ORCID) contributors: Statens Serum Institut, SSI [copyright holder, funder]","code":""},{"path":"https://ssi-dk.github.io/aeddo/reference/aeddo.html","id":null,"dir":"Reference","previous_headings":"","what":"Automated and Early Detection of Disease Outbreaks — aeddo","title":"Automated and Early Detection of Disease Outbreaks — aeddo","text":"function performs automated early detection disease outbreaks, (aeddo), time series data set. utilizes hierarchical models innovative manner infer one-step ahead random effects. turn, random effects used directly characterize outbreak.","code":""},{"path":"https://ssi-dk.github.io/aeddo/reference/aeddo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automated and Early Detection of Disease Outbreaks — aeddo","text":"","code":"aeddo(   data = data.frame(),   formula = formula(),   k = integer(),   sig_level = 0.95,   exclude_past_outbreaks = TRUE,   init_theta = numeric(),   lower = numeric(),   upper = numeric(),   method = \"BFGS\" )"},{"path":"https://ssi-dk.github.io/aeddo/reference/aeddo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automated and Early Detection of Disease Outbreaks — aeddo","text":"data tibble containing time series data, including columns 'y' observed values,'n' population size, covariates interest. formula model formula fixed effects  hierarchical model fit data. k integer specifying rolling window size employed parameter estimation. sig_level quantile random effects distribution used defining outbreak detection threshold, numeric value 0 1. exclude_past_outbreaks logical value indicating whether past outbreak related observations excluded future parameter estimation. init_theta Initial values model parameters optimization. lower Lower bounds optimization parameters. upper Upper bounds optimization parameters. method optimization method use, either \"BFGS\"  (default) \"L-BFGS-B\".","code":""},{"path":"https://ssi-dk.github.io/aeddo/reference/aeddo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automated and Early Detection of Disease Outbreaks — aeddo","text":"tibble-like 'aedseo' object containing: 'window_data': list tibble, representing data windowed parameter estimation. 'reference_data': list tibble, representing data reference time point. 'phi': dispersion parameter. 'lambda': estimated outbreak intensity. 'u': one-step ahead random effect. 'u_probability': probability observing one-step ahead random effect. 'outbreak_alarm': Logical. Indicates outbreak detected.","code":""},{"path":"https://ssi-dk.github.io/aeddo/reference/aeddo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Automated and Early Detection of Disease Outbreaks — aeddo","text":"","code":"# Create an example aedseo_tsd object aeddo_data <- data.frame(   time = as.Date(c(     \"2023-01-01\",     \"2023-01-02\",     \"2023-01-03\",     \"2023-01-04\",     \"2023-01-05\",     \"2023-01-06\"   )),   y = c(100, 120, 180, 110, 130, 140),   n = 1 )  # Supply a model formula fixed_effects_formula <- y ~ 1  # Choose a size for the rolling window k <- 2 # ... and quantile for the threshold sig_level <- 0.9  # Employ the algorithm aeddo_results <- aeddo(   data = aeddo_data,   formula = fixed_effects_formula,   k = k,   sig_level = sig_level,   exclude_past_outbreaks = TRUE,   init_theta = c(1, 0),   lower = c(-Inf, 1e-6),   upper = c(Inf, 1e2),   method = \"L-BFGS-B\" ) # Print the results print(aeddo_results) #> # A tibble: 4 × 7 #>   window_data  reference_data      phi lambda     u u_probability outbreak_alarm #>   <list>       <list>            <dbl>  <dbl> <dbl>         <dbl> <lgl>          #> 1 <df [2 × 3]> <df [1 × 3]>   0.000001   110. 1.00          0.528 FALSE          #> 2 <df [2 × 3]> <df [1 × 3]>   0.0339     150. 0.777         0.105 FALSE          #> 3 <df [2 × 3]> <df [1 × 3]>   0.0525     145. 0.909         0.369 FALSE          #> 4 <df [2 × 3]> <df [1 × 3]>   0.000001   120. 1.00          0.508 FALSE"},{"path":"https://ssi-dk.github.io/aeddo/reference/autoplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a complete 'ggplot' appropriate to a particular data type — autoplot","title":"Create a complete 'ggplot' appropriate to a particular data type — autoplot","text":"function generates complete 'ggplot' object suitable visualizing time series data aeddo object. creates line plot connecting observations adds points data point.","code":""},{"path":"https://ssi-dk.github.io/aeddo/reference/autoplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a complete 'ggplot' appropriate to a particular data type — autoplot","text":"","code":"autoplot(object, ...)  # S3 method for aeddo autoplot(object, ...)"},{"path":"https://ssi-dk.github.io/aeddo/reference/autoplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a complete 'ggplot' appropriate to a particular data type — autoplot","text":"object aeddo object ... Additional arguments (used).","code":""},{"path":"https://ssi-dk.github.io/aeddo/reference/autoplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a complete 'ggplot' appropriate to a particular data type — autoplot","text":"'ggplot' object visualizing time series data.","code":""},{"path":"https://ssi-dk.github.io/aeddo/reference/autoplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a complete 'ggplot' appropriate to a particular data type — autoplot","text":"","code":"# Create an example aeddo object aeddo_data <- data.frame(   time = as.Date(c(     \"2023-01-01\",     \"2023-01-02\",     \"2023-01-03\",     \"2023-01-04\",     \"2023-01-05\",     \"2023-01-06\"   )),   y = c(100, 120, 180, 110, 130, 140),   n = 1 )  # Supply a model formula fixed_effects_formula <- y ~ 1  # Choose a size for the rolling window k <- 2 # ... and quantile for the threshold sig_level <- 0.9  # Employ the algorithm aeddo_results <- aeddo(   data = aeddo_data,   formula = fixed_effects_formula,   k = k,   sig_level = sig_level,   exclude_past_outbreaks = TRUE,   init_theta = c(1, 0),   lower = c(-Inf, 1e-6),   upper = c(Inf, 1e2),   method = \"L-BFGS-B\" )  # Create a ggplot visualization for the aeddo object autoplot(aeddo_results) #> Warning: Using alpha for a discrete variable is not advised."},{"path":"https://ssi-dk.github.io/aeddo/reference/check_aeddo_inputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Check and assert the inputs for the aeddo function. — check_aeddo_inputs","title":"Check and assert the inputs for the aeddo function. — check_aeddo_inputs","text":"function internal use checks validity inputs aeddo function. performs various checks using checkmate package ensure inputs conform expected types values.","code":""},{"path":"https://ssi-dk.github.io/aeddo/reference/check_aeddo_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check and assert the inputs for the aeddo function. — check_aeddo_inputs","text":"","code":"check_aeddo_inputs(   data,   formula,   k,   sig_level,   exclude_past_outbreaks,   init_theta,   lower,   upper,   method )"},{"path":"https://ssi-dk.github.io/aeddo/reference/check_aeddo_inputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check and assert the inputs for the aeddo function. — check_aeddo_inputs","text":"data data frame containing time series data. formula model formula fixed effects hierarchical model. k integer specifying rolling window size employed parameter estimation. sig_level quantile random effects distribution used defining outbreak detection threshold. exclude_past_outbreaks Logical indicating whether past outbreak-related observations excluded future parameter estimation. init_theta Initial values model parameters optimization. lower Lower bounds optimization parameters. upper Upper bounds optimization parameters. method optimization method use, either \"BFGS\" \"L-BFGS-B\".","code":""},{"path":"https://ssi-dk.github.io/aeddo/reference/check_aeddo_inputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check and assert the inputs for the aeddo function. — check_aeddo_inputs","text":"Returns nothing. Raises errors inputs meet specified criteria.","code":""},{"path":"https://ssi-dk.github.io/aeddo/reference/check_aeddo_inputs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check and assert the inputs for the aeddo function. — check_aeddo_inputs","text":"","code":"if (FALSE) { # This function is for internal use and is called within the aeddo function. # It is not intended to be called directly by users. }"},{"path":"https://ssi-dk.github.io/aeddo/reference/check_nll_poisson_gamma_inputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Check and assert the inputs for the nll_poisson_gamma function. — check_nll_poisson_gamma_inputs","title":"Check and assert the inputs for the nll_poisson_gamma function. — check_nll_poisson_gamma_inputs","text":"function internal use checks validity inputs nll_poisson_gamma function. performs various checks using checkmate package ensure inputs conform expected types values.","code":""},{"path":"https://ssi-dk.github.io/aeddo/reference/check_nll_poisson_gamma_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check and assert the inputs for the nll_poisson_gamma function. — check_nll_poisson_gamma_inputs","text":"","code":"check_nll_poisson_gamma_inputs(theta, data, formula)"},{"path":"https://ssi-dk.github.io/aeddo/reference/check_nll_poisson_gamma_inputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check and assert the inputs for the nll_poisson_gamma function. — check_nll_poisson_gamma_inputs","text":"theta Numeric vector parameters. data data frame containing time series data. formula model formula fixed effects hierarchical model.","code":""},{"path":"https://ssi-dk.github.io/aeddo/reference/check_nll_poisson_gamma_inputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check and assert the inputs for the nll_poisson_gamma function. — check_nll_poisson_gamma_inputs","text":"Returns nothing. Raises errors inputs meet specified criteria.","code":""},{"path":"https://ssi-dk.github.io/aeddo/reference/check_nll_poisson_gamma_inputs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check and assert the inputs for the nll_poisson_gamma function. — check_nll_poisson_gamma_inputs","text":"","code":"if (FALSE) { # This function is for internal use and is called within the # nll_poisson_gamma function. It is not intended to be called directly by # users. }"},{"path":"https://ssi-dk.github.io/aeddo/reference/nll_poisson_gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Negative Log-Likelihood for Poisson Gamma Model — nll_poisson_gamma","title":"Negative Log-Likelihood for Poisson Gamma Model — nll_poisson_gamma","text":"Calculate negative log-likelihood Poisson Gamma modeling framework.","code":""},{"path":"https://ssi-dk.github.io/aeddo/reference/nll_poisson_gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negative Log-Likelihood for Poisson Gamma Model — nll_poisson_gamma","text":"","code":"nll_poisson_gamma(theta, data, formula)"},{"path":"https://ssi-dk.github.io/aeddo/reference/nll_poisson_gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negative Log-Likelihood for Poisson Gamma Model — nll_poisson_gamma","text":"theta numeric vector containing model parameters. first part vector represents fixed effects, remaining part represents model parameters. data tibble containing time series data, including columns 'y' observed values,'n' population size, covariates interest. formula formula specifying model structure.","code":""},{"path":"https://ssi-dk.github.io/aeddo/reference/nll_poisson_gamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Negative Log-Likelihood for Poisson Gamma Model — nll_poisson_gamma","text":"negative log-likelihood value.","code":""},{"path":"https://ssi-dk.github.io/aeddo/reference/nll_poisson_gamma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Negative Log-Likelihood for Poisson Gamma Model — nll_poisson_gamma","text":"","code":"# Initial parameters theta <- c(0.5, 0.1)  # Sample data data <- data.frame(   y = c(10, 15, 20, 30, 50, 100, 200, 40, 20, 10),   n = c(100, 150, 200, 300, 500, 1000, 2000, 400, 200, 100) )  # Fixed effects model formula fixed_effects_formula <- y ~ 1  # Calculate negative log likelihood nll_poisson_gamma(   theta = theta,   data = data,   formula = fixed_effects_formula ) #> [1] 4006.929"},{"path":"https://ssi-dk.github.io/aeddo/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://ssi-dk.github.io/aeddo/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://ssi-dk.github.io/aeddo/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://ssi-dk.github.io/aeddo/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://ssi-dk.github.io/aeddo/reference/plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a complete 'ggplot' appropriate to a particular data type — plot.aeddo","title":"Create a complete 'ggplot' appropriate to a particular data type — plot.aeddo","text":"function generates complete 'ggplot' object suitable visualizing time series data aeddo object. creates line plot connecting observations adds points data point.","code":""},{"path":"https://ssi-dk.github.io/aeddo/reference/plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a complete 'ggplot' appropriate to a particular data type — plot.aeddo","text":"","code":"# S3 method for aeddo plot(x, ...)"},{"path":"https://ssi-dk.github.io/aeddo/reference/plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a complete 'ggplot' appropriate to a particular data type — plot.aeddo","text":"x aeddo object ... Additional arguments (used).","code":""},{"path":"https://ssi-dk.github.io/aeddo/reference/plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a complete 'ggplot' appropriate to a particular data type — plot.aeddo","text":"'ggplot' object visualizing time series data.","code":""},{"path":[]},{"path":"https://ssi-dk.github.io/aeddo/reference/plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a complete 'ggplot' appropriate to a particular data type — plot.aeddo","text":"","code":"# Create an example aeddo object aeddo_data <- data.frame(   time = as.Date(c(     \"2023-01-01\",     \"2023-01-02\",     \"2023-01-03\",     \"2023-01-04\",     \"2023-01-05\",     \"2023-01-06\"   )),   y = c(100, 120, 180, 110, 130, 140),   n = 1 )  # Supply a model formula fixed_effects_formula <- y ~ 1  # Choose a size for the rolling window k <- 2 # ... and quantile for the threshold sig_level <- 0.9  # Employ the algorithm aeddo_results <- aeddo(   data = aeddo_data,   formula = fixed_effects_formula,   k = k,   sig_level = sig_level,   exclude_past_outbreaks = TRUE,   init_theta = c(1, 0),   lower = c(-Inf, 1e-6),   upper = c(Inf, 1e2),   method = \"L-BFGS-B\" )  # Create a ggplot visualization for the aeddo object plot(aeddo_results)"},{"path":"https://ssi-dk.github.io/aeddo/news/index.html","id":"aeddo-011","dir":"Changelog","previous_headings":"","what":"aeddo 0.1.1","title":"aeddo 0.1.1","text":"CRAN release: 2023-11-27","code":""},{"path":"https://ssi-dk.github.io/aeddo/news/index.html","id":"patch-0-1-1","dir":"Changelog","previous_headings":"","what":"Patch","title":"aeddo 0.1.1","text":"Transferring maintainership R package Lasse Engbo Christiansen.","code":""},{"path":"https://ssi-dk.github.io/aeddo/news/index.html","id":"aeddo-010","dir":"Changelog","previous_headings":"","what":"aeddo 0.1.0","title":"aeddo 0.1.0","text":"CRAN release: 2023-11-14","code":""},{"path":"https://ssi-dk.github.io/aeddo/news/index.html","id":"features-0-1-0","dir":"Changelog","previous_headings":"","what":"Features","title":"aeddo 0.1.0","text":"Added new function nll_poisson_gamma() computing negative log-likelihood Poisson-Gamma model. function essential parameter estimation aeddo() algorithm. Introducing aeddo() function Automated Early Detection Disease Outbreaks. innovative algorithm utilizes hierarchical models infer one-step ahead random effects, providing effective tool identifying responding disease outbreaks time series data. function includes various parameters customization, rolling window size, outbreak detection threshold, optimization method.","code":""}]
